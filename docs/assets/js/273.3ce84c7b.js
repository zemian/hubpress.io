(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{655:function(t,n,e){"use strict";e.r(n);var a=e(10),s=Object(a.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("A quick sql table setup to test most common data types.")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("-- Notes for Sybase Database 16\n-- http://infocenter.sybase.com/help/index.jsp?topic=/com.sybase.infocenter.dc70202.1570/html/quickref/title.htm\n\n-- Data Types\n-- http://infocenter.sybase.com/help/index.jsp?topic=/com.sybase.infocenter.dc32300.1600/doc/html/san1390612189202.html\n\n/*\n\nCHAR          Fixed length and space padded character string (sql: CHAR)\nVARCHAR       Variable length character string (sql: VARCHAR)\nUNIVARCHAR    Same as VARCHAR but with Unicode support\nTEXT          Variable length character large string (sql: TEXT)\n\nINT           Declare integer number (sql: INT 32 bits)\nSMALLINT      16 bits\nBIGINT        64 bits\n\nREAL             Declare floating-point number 32 bits\nDOUBLE PRECISION Declare floating-point number 64 bits\n\nNUMERIC(p,s)     Declare fixed-point number (sql: NUMERIC)\n\nDATE          Declare date\nTIME          Declare time\nDATETIME      Declare datetime with sub second precision\n\nBINARY        Binary data\nBINARY        Binary data\nBINARY        Binary data\n\n */\n-- Test table\ncreate table test(\n  id    int identity primary key not null,\n  ts    datetime default getdate() not null,\n  cat   varchar(10) not null,\n\n  price    numeric(19,4) null,\n  qty      int null,\n\n  txtdata  text null,\n  bindata  binary null,\n\n  distx  real null,\n  disty  double precision null\n);\ninsert into test(cat, price, qty) values ('test', 100000.10, 50000),\n                                         ('test', 100000.20, 0),\n                                         ('test', 100000.00, 1),\n                                         ('test', 9977000.3333, 179),\n                                         ('test', 104729.1129, 104729);\ninsert into test(cat, bindata, txtdata) values ('test2', 0xCAFEBABE, 'CAFEBABE');\ninsert into test(cat, bindata) values ('test3', convert(binary, rand()));\ninsert into test(cat, bindata) values ('test3', convert(binary, rand()));\ninsert into test(cat, bindata) values ('test3', convert(binary, rand()));\ninsert into test(cat, distx, disty) values ('test4', rand(), rand());\ninsert into test(cat, distx, disty) values ('test4', rand(), rand());\ninsert into test(cat, distx, disty) values ('test4', rand(), rand());\nselect sum(price) from test where cat = 'test';\nselect * from test order by cat, ts desc;\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);