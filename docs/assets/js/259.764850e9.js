(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{641:function(n,e,a){"use strict";a.r(e);var t=a(10),i=Object(t.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("I love to use bash shell terminal. Itâ€™s a much more powerful terminal to\ndo everyday tasks. Even in Windows, I can get most of what I need using\nCygwin. Unfortunately Java executable are native to OS only, and for\nWindows, it would still work under Cygwin, but all the file system paths\nare still native. Java can understand the mixed-path though, and it has\nmade somewhat easier than the Windows native backward slash path like\ntyping. This means we can define "),a("code",[n._v("JAVA_HOME")]),n._v(" variable using mixed path\nmode. In Cygwin, I define my "),a("code",[n._v(".bashrc")]),n._v(" like this:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("export JAVA_HOME=C:/Users/zemian/apps/jdk-8u161\nPATH=$HOME/apps/jdk-8u161/bin:$PATH\n")])])]),a("p",[n._v("I sometimes work with different version of JDK for various application\ntesting. In this case, I need a way to quicly switch JDK version in my\nshell env. To make it easier, I have installed all of my JDK in a\n"),a("code",[n._v("$HOME/apps")]),n._v(" directory, and created symbolic links to each JDKs like\nthis:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd $HOME/apps\nls -ld jdk*\n\ndrwx------+ 1 zemian staff 0 Mar 24 16:58 jdk-8u161\ndrwx------+ 1 zemian staff 0 Mar 24 10:57 jdk-9.0.4\ndrwx------+ 1 zemian staff 0 Mar 24 10:48 jdk-10\n\nlrwxrwxrwx  1 zemian staff 9 Mar 24 16:55 jdk8 -> jdk-8u161\nlrwxrwxrwx  1 zemian staff 9 Mar 24 11:02 jdk9 -> jdk-9.0.4\nlrwxrwxrwx  1 zemian staff 6 Mar 24 11:00 jdk10 -> jdk-10\n")])])]),a("p",[n._v("Now that each JDK has a nice consistent version number in path, then I\ncreate a shell function like this to switch between them:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('# Switching Multiple JDK\nswitchjava() {\n        JDK="jdk$1"\n        if [[ ! -d $APPS_DIR/$JDK ]]; then\n                echo "ERROR: JDK path not found: $APPS_DIR/$JDK"\n                return\n        fi\n        export JAVA_HOME=`cygpath -wm $APPS_DIR/$JDK`\n        export PATH=$APPS_DIR/$JDK/bin:$PATH\n\n        # Verifying java\n        echo "Switched JAVA_HOME to $JAVA_HOME"\n        echo "Java Path:"\n        which java\n        echo "Java Version:"\n        java -version\n}\n')])])]),a("p",[n._v("To put it in use, it looks like this:")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('$ switchjava 9\nSwitched JAVA_HOME to C:/Users/zemian/apps/jdk-9.0.4\nJava Path:\n/home/zemian/apps/jdk9/bin/java\nJava Version:\nopenjdk version "9.0.4"\nOpenJDK Runtime Environment (build 9.0.4+11)\nOpenJDK 64-Bit Server VM (build 9.0.4+11, mixed mode)\n\n$ switchjava 8\nSwitched JAVA_HOME to C:/Users/zemian/apps/jdk-8u161\nJava Path:\n/home/zemian/apps/jdk8/bin/java\nJava Version:\njava version "1.8.0_161"\nJava(TM) SE Runtime Environment (build 1.8.0_161-b12)\nJava HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)\n')])])])])}),[],!1,null,null,null);e.default=i.exports}}]);