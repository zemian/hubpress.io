(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{635:function(t,e,s){"use strict";s.r(e);var n=s(10),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"run-postgres-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-postgres-server"}},[t._v("#")]),t._v(" Run Postgres Server")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("# Start /usr/sbin/cygserver first if you haven't already done so\nmkdir /srv/pgdata\nexport PGDATA=/srv/pgdata\npg_ctl init\npg_ctl start\n")])])]),s("h2",{attrs:{id:"test-posgres-using-client"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-posgres-using-client"}},[t._v("#")]),t._v(" Test Posgres Using Client")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("psql postgres\n\npostgres=# create table test_ratings(username varchar(200), rating int);\npostgres=# insert into test_ratings values('tester1', 5), ('tester2', 4);\npostgres=# select * from test_ratings;\n username | rating\n----------+--------\n tester1  |      5\n tester2  |      4\n")])])]),s("h2",{attrs:{id:"test-connectivity-using-python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-connectivity-using-python"}},[t._v("#")]),t._v(" Test connectivity using Python")]),t._v(" "),s("p",[t._v("Run "),s("code",[t._v("pip install psycopg2")]),t._v(" if you haven’t already install the driver.")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("testdb.py")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("import psycopg2\nwith psycopg2.connect('dbname=postgres') as conn:\n        with conn.cursor() as cur:\n                cur.execute('select * from test_ratings')\n                while True:\n                        row = cur.fetchmany()\n                        if len(row) == 0:\n                                break\n                        print(row)\n")])])]),s("h1",{attrs:{id:"postgres-windows-installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postgres-windows-installation"}},[t._v("#")]),t._v(" Postgres Windows Installation")]),t._v(" "),s("p",[t._v("The official download is provided by EnterpriseDB (EDB) You can get a\nzip package from:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.enterprisedb.com/download-postgresql-binaries",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.enterprisedb.com/download-postgresql-binaries"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("To install, just unzip it.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("mkdir $HOME/apps/postgresql-10.3-2\ncd $HOME/apps/postgresql-10.3-2\nunzip postgresql-10.3-2-windows-x64-binaries.zip\n")])])]),s("p",[t._v("Server can be started manually like this in cmd.exe prompt:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('bin\\pg_ctl -D data -o "--encoding=UTF8 --auth=trust" initdb\nmkdir logs\nbin\\pg_ctl -D data -l logs\\postgres.log start\n\nbin\\createdb %USERNAME%\nchcp 1252\nbin\\psql\n\nzemian=# select version();\n                          version\n------------------------------------------------------------\n PostgreSQL 10.3, compiled by Visual C++ build 1800, 64-bit\n(1 row)\n')])])]),s("p",[t._v('By default inidb will create a "postgres" database, but user is your\nWindows login name, and it will not match. It’s more convient to create\na database that match your username, and use that as default.')]),t._v(" "),s("p",[t._v('You should be careful with "--auth=trust", which can get you started\nquickly but not very secure.')])])}),[],!1,null,null,null);e.default=a.exports}}]);