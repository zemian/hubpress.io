(window.webpackJsonp=window.webpackJsonp||[]).push([[269],{651:function(e,n,t){"use strict";t.r(n);var r=t(10),a=Object(r.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[this._v("-- Simple Function\ncreate or replace function rand_range(a int, b int) returns int\nas $$\n  -- return a random range of int between a and b, both inclusive!;\n  select cast(floor(random()*((b + 1)-a)+a) as int);\n$$ language sql;\nselect rand_range(1, 10);\nselect rand_range(90, 95) from generate_series(1, 10);\n\n-- Function to print message on DB server\ncreate or replace function print_msg(msg text, lev text default 'notice') returns void\n  as $$\n  begin\n    case\n      when lev = 'debug' then\n        raise debug '%', msg;\n      when lev = 'info' then\n        raise info '%', msg;\n      else\n        raise notice '%', msg;\n    end case;\n  end;\n$$ language plpgsql;\nselect print_msg('hello world');\n\n-- Log Function\ndrop table log;\ncreate table log(\n  id serial,\n  msg text not null,\n  ts timestamptz default current_timestamp not null,\n  category varchar(50) default 'INFO' not null,\n  user_id varchar(50) default 'system' not null,\n  source_info text null\n);\ncreate or replace function add_log(\n  msg text,\n  category varchar(50) default 'INFO'\n) returns void\nas $$\nbegin\n  insert into log(msg, category, source_info, user_id)\n    values(msg, category, 'client=' || inet_client_addr(), current_user);\nend;\n$$ language plpgsql;\n\nselect add_log('hello2');\nselect public.add_log('hello3');\nselect * from log;\n\n-- Triggers to log data entry or update\ndrop table test;\ncreate table test(id serial, f1 real);\ncreate or replace function log_test_update() returns trigger\nas $$\nbegin\n  perform add_log('Insert or Update on test table');\n  return NEW;\nend\n$$ language plpgsql;\ncreate trigger test_logging_trigger\n  after insert or update on test\n  for each row\n  execute procedure log_test_update();\ninsert into test(f1) values(0.10), (0.20), (0.30);\nupdate test set f1 = 3.5 where id = 1;\nselect * from test;\nselect * from log;\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);