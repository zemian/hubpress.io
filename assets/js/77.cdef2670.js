(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{462:function(n,e,t){"use strict";t.r(e);var a=t(11),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("I just noticed that Cygwin's "),t("code",[n._v("cygpath")]),n._v(" command supports "),t("code",[n._v("-p")]),n._v(" option. This is a real gem when writing Java wrapper script that needs to covert CLASSPATH values. A simple script can demonstrate the purpose.")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('    #!/usr/bin/env bash\n    # Author: Zemian Deng, date: 2012-11-16T00:00:00-05:00\n    #\n    # run.sh - A simple Java wrapper script for Cygwin and Unix/Linux shell. We assume \n    # this script is located in a subdiretory inside the application home directory.\n    # Example:\n    #   app/bin/run.sh\n    #   app/config/log4j.properties\n    #   app/lib/log4j.jar\n    # Usage:\n    #   bash> run.sh app.Hello\n    #\n    DIR=$(cd "$(dirname $0)/.." && pwd)\n    CP=${CP:="$DIR/config:$DIR/lib/*"}\n    if [[ "$OS" == Windows* ]]; then\n     CP=$(cygpath -mp $CP)\n    fi\n    java -cp "$CP" "$@"\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);