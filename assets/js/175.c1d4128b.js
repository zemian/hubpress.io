(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{561:function(e,t,n){"use strict";n.r(t);var a=n(11),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Need to replace all occurances of a pattern text and replace it with a captured group? Something like this in Java works nicely:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('    String html = "<a href=\'myurl?id=1123\'>myurl</a>\\n" +\n            "<a href=\'myurl2?id=2123\'>myurl2</a>\\n" +\n            "<a href=\'myurl3?id=3123\'>myurl3</a>";\n    html = html.replaceAll("id=(\\\\w+)\'?", "productId=$1\'");\n')])])]),n("p",[e._v('Here I swapped the query name from "id" to "productId" on all the links that matched my criteria. But what happen if I needed to pre-process the captured ID value before replacing it? Let\'s say now I want to do a lookup and transform the ID value to something else?')]),e._v(" "),n("p",[e._v("This extra requirement would lead us to dig deeper into Java RegEx package. Here is what I come up with:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import java.util.regex.*;\n...\n    public String replaceAndLookupIds(String html) {\n        StringBuffer newHtml = new StringBuffer();\n        Pattern p = Pattern.compile("id=(\\\\w+)\'?");\n        Matcher m = p.matcher(html);\n        while (m.find()) {\n            String id= m.group(1);\n            String newId = lookup(id);\n            String rep = "productId=" + newId + "\'";\n            m.appendReplacement(newHtml, rep);\n        }\n        m.appendTail(newHtml);\n        return newHtml.toString();\n    }\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);