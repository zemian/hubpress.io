(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{487:function(e,o,n){"use strict";n.r(o);var a=n(11),t=Object(a.a)({},(function(){var e=this,o=e.$createElement,n=e._self._c||o;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("There are many good benefits in using "),n("code",[e._v("slf4j")]),e._v(" library as your Java\napplication logging API layer. Here I will show few examples on how\nto use and configure it with different loggers.")]),e._v(" "),n("p",[e._v("You can think of "),n("code",[e._v("slf4j")]),e._v(" as an Java interface, and then you would\nneed an implementation (ONLY ONE) at runtime to provide the actual\nlogging details, such as writing to STDOUT or to a file etc. Each\nlogging implementation (or called binding) would obviously have their\nown way of configuring the log output, but your application will remain\nagnostic and always use the same "),n("code",[e._v("org.slf4j.Logger")]),e._v(" API. Lets see how\nthis works in practice.")]),e._v(" "),n("h2",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])]),e._v(" "),n("p",[e._v("Using "),n("code",[e._v("slf4j")]),e._v(" with Simple logger")]),e._v(" "),n("p",[e._v("Create a Maven based project and this in your "),n("code",[e._v("pom.xml")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n        <version>1.7.5</version>\n    </dependency>\n")])])]),n("p",[e._v("Now you may use "),n("code",[e._v("Logger")]),e._v(" in your Java code like this.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('package deng;\nimport org.slf4j.*;\npublic class Hello {\n    static Logger LOGGER = LoggerFactory.getLogger(Hello.class);\n    public static void main(String[] args) {\n        for (int i = 0; i < 10; i++)\n            if (i % 2 == 0)\n                LOGGER.info("Hello {}", i);\n            else\n                LOGGER.debug("I am on index {}", i);\n    }\n}\n')])])]),n("p",[e._v("The above will get your program compiled, but when you run it, you will see these output.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('bash> java deng.Hello\nSLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n')])])]),n("p",[e._v('What its saying is that at runtime, you are missing the logging "implementation" (or the\nlogger binding), so '),n("code",[e._v("slf4j")]),e._v(' simply use a "NOP" implmentation, which does nothing. In order\nto see the output properly, you may try use an simple implementation that does not require\nany configuration at all! Just go back to your '),n("code",[e._v("pom.xml")]),e._v(" and add the following:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-simple</artifactId>\n        <version>1.7.5</version>\n    </dependency>\n")])])]),n("p",[e._v("Now you see logging output on STDOUT with INFO level. This simple logger will default\nshow any INFO level message or higher. In order to see DEBUG messages, you would\nneed to pass in this System Property "),n("code",[e._v("-Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG")]),e._v("\nat your Java startup.")]),e._v(" "),n("h2",{attrs:{id:"-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[e._v("#")])]),e._v(" "),n("p",[e._v("Using "),n("code",[e._v("slf4j")]),e._v(" with Log4j logger")]),e._v(" "),n("p",[e._v("Now we can experiment and swap different logger implementations, but your application code\ncan remain the same. All we need is to replace "),n("code",[e._v("slf4j-simple")]),e._v(" with another popular logger\nimplementation, such as the Log4j.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-log4j12</artifactId>\n        <version>1.7.5</version>\n    </dependency>\n")])])]),n("p",[e._v("Again, we must configure logging per implementation that we picked.\nIn this case, we need an "),n("code",[e._v("src/main/resources/log4j.properties")]),e._v(" file.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    log4j.rootLogger=DEBUG, STDOUT\n    log4j.logger.deng=INFO\n    log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender\n    log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout\n    log4j.appender.STDOUT.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n\n")])])]),n("p",[e._v("Re-run your program, and you should see similar output.")]),e._v(" "),n("h2",{attrs:{id:"-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[e._v("#")])]),e._v(" "),n("p",[e._v("Using "),n("code",[e._v("slf4j")]),e._v(" with JDK logger")]),e._v(" "),n("p",[e._v("The JDK actually comes with a logger package, and you can replace "),n("code",[e._v("pom.xml")]),e._v("\nwith this logger implementation.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-jdk14</artifactId>\n        <version>1.7.5</version>\n    </dependency>\n")])])]),n("p",[e._v("Now the configuration for JDK logging is a bit difficult to work with. Not only need a\nconfig file, such as "),n("code",[e._v("src/main/resources/logging.properties")]),e._v(", but you would also need\nto add a System properties "),n("code",[e._v("-Djava.util.logging.config.file=logging.properties")]),e._v("\nin order to have it pick it up. Here is an example to get you started:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v(".level=INFO\n\nhandlers=java.util.logging.ConsoleHandler\njava.util.logging.ConsoleHandler.level=FINEST\ndeng.level=FINEST\n")])])]),n("h2",{attrs:{id:"-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-4"}},[e._v("#")])]),e._v(" "),n("p",[e._v("Using "),n("code",[e._v("slf4j")]),e._v(" with Logback logger")]),e._v(" "),n("p",[e._v("The logback logger implementation is a super dupa quality implementation. If you intend\nto write serious code that go into production, you may want to evaluate this option. Again\nmodify your "),n("code",[e._v("pom.xml")]),e._v(" to replace with this:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    <dependency>\n        <groupId>ch.qos.logback</groupId>\n        <artifactId>logback-classic</artifactId>\n        <version>1.0.13</version>\n    </dependency>\n")])])]),n("p",[e._v("Here is a sample of configuration "),n("code",[e._v("src/main/resources/logback.xml")]),e._v(" to get things started.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('<configuration>\n  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\n    <encoder>\n      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <logger name="deng" level="DEBUG"/>\n\n  <root level="INFO">\n    <appender-ref ref="STDOUT" />\n  </root>\n</configuration>\n')])])]),n("h2",{attrs:{id:"-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-5"}},[e._v("#")])]),e._v(" "),n("p",[e._v("Writing your own library with "),n("code",[e._v("slf4j")]),e._v(" logger")]),e._v(" "),n("p",[e._v("If you are providing an Java library for large end users consumption, its good idea to\nset your project to depend on "),n("code",[e._v("slf4j-api")]),e._v(" only, and then let your user choose any\nlogger implementation at their development or runtime environment. As end users, they\nmay quickly select one of option above and take advatage of their own favorite logging\nimplementation features.")]),e._v(" "),n("h2",{attrs:{id:"-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-6"}},[e._v("#")])]),e._v(" "),n("p",[e._v("References")]),e._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"http://slf4j.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://slf4j.org/"),n("OutboundLink")],1)])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://logging.apache.org/log4j/1.2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://logging.apache.org/log4j/1.2/"),n("OutboundLink")],1)])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://docs.oracle.com/javase/7/docs/technotes/guides/logging/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://docs.oracle.com/javase/7/docs/technotes/guides/logging/"),n("OutboundLink")],1)])]),e._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://logback.qos.ch/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://logback.qos.ch/"),n("OutboundLink")],1)])])])])}),[],!1,null,null,null);o.default=t.exports}}]);